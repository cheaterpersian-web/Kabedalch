# API Dockerfile - Distroless approach (alternative)
FROM node:20-alpine AS builder
WORKDIR /app

# Install only essential packages
RUN apk add --no-cache openssl

# Copy package files
COPY package.json ./

# Install minimal build dependencies
RUN npm install --omit=dev --omit=optional --no-audit --no-fund --no-save \
    @nestjs/core @nestjs/common @nestjs/platform-express typescript

# Copy source and build
COPY . .
RUN npx prisma generate && npx tsc -p tsconfig.build.json

# Production stage - distroless
FROM gcr.io/distroless/nodejs20-debian12
WORKDIR /app

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules/@prisma ./node_modules/@prisma
COPY --from=builder /app/prisma ./prisma
COPY package.json ./

# Install only essential runtime dependencies
RUN npm install --omit=dev --omit=optional --no-audit --no-fund --no-save \
    @nestjs/core @nestjs/common @nestjs/platform-express @prisma/client

CMD ["dist/main.js"]